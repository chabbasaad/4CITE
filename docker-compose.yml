version: '3'

services:
  # Backend Services
  backend:
    build:
      context: ./hotel-api
      dockerfile: Dockerfile
    container_name: hotel-backend
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./hotel-api:/var/www
      - ./hotel-api/php.ini:/usr/local/etc/php/conf.d/local.ini
    depends_on:
      db:
        condition: service_healthy
    networks:
      - hotel-network
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=hotel
      - DB_USERNAME=root
      - DB_PASSWORD=root

  nginx:
    image: nginx:alpine
    container_name: hotel-nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./hotel-api:/var/www
      - ./hotel-api/docker/nginx/laravel.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    networks:
      - hotel-network

  db:
    image: mysql:8.0
    container_name: hotel-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: hotel
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - dbdata:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - hotel-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Frontend Service
  frontend:
    build:
      context: ./hotel-web
      dockerfile: Dockerfile
    container_name: hotel-frontend
    restart: unless-stopped
    ports:
      - "5173:5173"
    volumes:
      - ./hotel-web:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:8000/api
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend
    networks:
      - hotel-network
    command: npm run dev -- --host 0.0.0.0

networks:
  hotel-network:
    driver: bridge

volumes:
  dbdata: 