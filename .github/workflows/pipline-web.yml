name: Pipeline-Web

on:
  push:
    branches:
      - master
    paths:
      - 'hotel-web/**'
      - '.github/workflows/pipline-web.yml'
  pull_request:
    branches:
      - master
    paths:
      - 'hotel-web/**'
      - '.github/workflows/pipline-web.yml'
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./hotel-web

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: './hotel-web/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint -- --max-warnings=0

      - name: Run Unit Tests
        run: npm run test:unit

      - name: Run Integration Tests
        run: npm run test:integration

      - name: Run E2E Tests
        run: npm run test:e2e

      - name: Check TypeScript Types
        run: npm run type-check

  security:
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./hotel-web

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit

      - name: Check for outdated packages
        run: npm outdated

  build:
    needs: security
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./hotel-web

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: './hotel-web/package-lock.json'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build React app
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: hotel-web/dist
          
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: build
          path: ./dist

      - name: Deploy to Production
        run: |
          echo "Deploying to production..."
          echo "Frontend deployment would happen here"
          echo "Deployment completed successfully!"
