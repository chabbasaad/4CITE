name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: hotel_api_test
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql, pdo_mysql
        coverage: xdebug

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Generate key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Execute tests
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: hotel_api_test
        DB_USERNAME: user
        DB_PASSWORD: password
      run: vendor/bin/phpunit --coverage-text

  security:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Security Check
      uses: symfonycorp/security-checker-action@v4

    - name: PHP Security Checker
      uses: StephaneBour/actions-php-security-checker@1.1

    - name: Composer Audit
      run: composer audit

  build:
    needs: security
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl

    - name: Install Dependencies
      run: composer install --no-dev --optimize-autoloader

    - name: Generate key
      run: |
        php -r "file_exists('.env') || copy('.env.example', '.env');"
        php artisan key:generate

    - name: Clear and Cache Config
      run: |
        php artisan config:clear
        php artisan config:cache
        php artisan route:cache
        php artisan view:cache

    - name: Create Build Artifact
      run: |
        tar -czf build.tar.gz \
          --exclude=".git" \
          --exclude="node_modules" \
          --exclude="tests" \
          .

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: build-artifact
        path: build.tar.gz

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Download Build Artifact
      uses: actions/download-artifact@v3
      with:
        name: build-artifact

    - name: Simulate Deployment
      run: |
        echo "Starting deployment to production environment..."
        echo "Deploying build.tar.gz..."
        echo "Running database migrations..."
        echo "Deployment completed successfully!"
