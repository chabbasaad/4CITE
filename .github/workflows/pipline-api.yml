  name: pipline-api


  on:
    push:
      branches:
        - main
      paths:
        - 'front-end/**'
    pull_request:
      branches:
        - main
        - develop
      paths:
        - 'hotel-api/**'
    workflow_dispatch:
  
  jobs:
    deploy:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v3
        - name: Set up SSH
          run: |
            mkdir -p ~/.ssh
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts
    
        - name: Archive project files
          run: tar -czf app.tar.gz ./hotel-api
  
        - name: Copy archive to server
          run: scp -i ~/.ssh/id_rsa  app.tar.gz ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/home/${{ secrets.USERNAME }}/
  
        - name: Deploy with Docker Compose
          run: |
            ssh -i ~/.ssh/id_rsa ${{ secrets.USERNAME }}@${{ secrets.HOST }} << 'EOF'
              cd /home/${{ secrets.USERNAME }}
              
              # Installer Docker Compose 
              if ! command -v docker-compose &> /dev/null; then
                sudo apt update
                sudo apt install -y docker-compose
              fi
              
              rm -rf hotel-api
              tar -xzf app.tar.gz 
              cd hotel-api
              docker-compose down
              docker image rm web-traficandme_frontend
              docker-compose up -d
            EOF
